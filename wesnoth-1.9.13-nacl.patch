diff --git a/src/nacl/SConscript b/src/nacl/SConscript
index c3e7f85..c627187 100644
--- a/src/nacl/SConscript
+++ b/src/nacl/SConscript
@@ -1,7 +1,5 @@
 Import("env")
 
-env.Append(CPPPATH=["#/src/nacl/generated", "#/src/nacl"])
-
 libwesnoth_nacl = env.Library("wesnoth_nacl", ["plugin.cc"])
 
 Return("libwesnoth_nacl")
diff --git a/src/nacl/dir_list.h b/src/nacl/dir_list.h
deleted file mode 100644
index fe282fb..0000000
--- a/src/nacl/dir_list.h
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Intentionally empty */
-
diff --git a/src/nacl/file_list.h b/src/nacl/file_list.h
deleted file mode 100644
index fe282fb..0000000
--- a/src/nacl/file_list.h
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Intentionally empty */
-
diff --git a/src/nacl/pack_list.h b/src/nacl/pack_list.h
deleted file mode 100644
index fe282fb..0000000
--- a/src/nacl/pack_list.h
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Intentionally empty */
-
diff --git a/src/nacl/plugin.cc b/src/nacl/plugin.cc
index fcea550..26eebd3 100644
--- a/src/nacl/plugin.cc
+++ b/src/nacl/plugin.cc
@@ -23,26 +23,6 @@ extern int wesnoth_main(int argc, char **argv);
 #include <nacl-mounts/pepper/PepperMount.h>
 
 
-const char* http_dirs[] = {
-#include <dir_list.h>
-};
-
-struct http_file_info {
-  const char* path;
-  size_t size;
-} http_files[] = {
-#include <file_list.h>
-};
-
-struct http_pack_info {
-  const char* path;
-  const char* pack_path;
-  off_t offset;
-} http_packs[] = {
-#include <pack_list.h>
-};
-
-
 class PluginInstance : public pp::Instance {
  public:
   explicit PluginInstance(PP_Instance instance) : pp::Instance(instance),
@@ -50,7 +30,8 @@ class PluginInstance : public pp::Instance {
                                                   width_(0),
                                                   height_(0),
                                                   progress_handler_(this),
-                                                  directory_reader_(this) {
+                                                  directory_reader_(this),
+                                                  http2_files_("") {
     RequestInputEvents(PP_INPUTEVENT_CLASS_MOUSE);
     RequestFilteringInputEvents(PP_INPUTEVENT_CLASS_KEYBOARD);
 
@@ -101,7 +82,16 @@ class PluginInstance : public pp::Instance {
     directory_reader_.HandleResponse(s);
   }
 
-  bool Init(int argc, const char* argn[], const char* argv[]) {
+  bool Init(uint32_t argc, const char* argn[], const char* argv[]) {
+    for (int i = 0; i < argc; ++i) {
+      std::string s = argn[i];
+      if (s == "http2_files") {
+	http2_files_ = argv[i];
+	break;
+      }
+    }
+    fprintf(stderr, "http2_files='%s'\n", http2_files_.c_str());
+    fflush(stderr);
     return true;
   }
 
@@ -113,6 +103,7 @@ class PluginInstance : public pp::Instance {
   KernelProxy* proxy_;
   MainThreadRunner* runner_;
   pp::FileSystem* fs_;
+  std::string http2_files_;
 
   static void* sdl_thread_static(void* param) {
     return reinterpret_cast<PluginInstance*>(param)->sdl_thread();
@@ -139,28 +130,7 @@ class PluginInstance : public pp::Instance {
     http2_mount->SetProgressHandler(&progress_handler_);
  
     fprintf(stderr, "Registering known files.\n");
-    fflush(stderr);
-    for (int i = 0; i < sizeof(http_dirs) / sizeof(*http_dirs); ++i) {
-      char* path = (char*)http_dirs[i];
-      if (path && *path)
-        http2_mount->AddDir(path);
-    }
-
-    for (int i = 0; i < sizeof(http_files) / sizeof(*http_files); ++i) {
-      char* path = (char*)http_files[i].path;
-      size_t size = http_files[i].size;
-      if (path && *path)
-        http2_mount->AddFile(path, size);
-    }
-
-    for (int i = 0; i < sizeof(http_packs) / sizeof(*http_packs); ++i) {
-      char* path = (char*)http_packs[i].path;
-      char* pack_path = (char*)http_packs[i].pack_path;
-      off_t offset = http_packs[i].offset;
-      if (path && *path) {
-        http2_mount->SetInPack(path, pack_path, offset);
-      }
-    }
+    http2_mount->ReadManifest(http2_files_);
 
     http2_mount->SetInMemory("/fonts/Andagii.ttf", true);
     http2_mount->SetInMemory("/fonts/DejaVuSans.ttf", true);
diff --git a/utils/nacl/buildpack.py b/utils/nacl/buildpack.py
deleted file mode 100644
index a603e40..0000000
--- a/utils/nacl/buildpack.py
+++ /dev/null
@@ -1,145 +0,0 @@
-#!/usr/bin/python
-# Copyright (c) 2011 The Native Client Authors. All rights reserved.
-# Use of this source code is governed by a BSD-style license that can be
-# found in the NaCl-LICENSE file.
-
-import shutil
-import glob
-import os
-import fnmatch
-import sys
-
-
-# pack description format: [root_mask, file_name_mask, file_path_exclusion_mask]
-# pack will contain 
-#   all files under (and including) the expansion of root_mask,
-#   whose names match file_name_mask,
-#   whose full path (with root_mask) does not match full_path_exclusion_mask
-pack0_masks = [
-    ['data/languages', '*', ''],
-    ['data/hardwired', '*', ''],
-    ['images/game-icon.png', '*', ''],
-    ['images/cursors-bw', '*', ''],
-    ['images/misc/logo.png', '*', ''],
-    ]
-
-pack1_masks = [
-    ['images', '*', ''],
-    ['data/*.cfg', '*', ''],
-    ['data/gui', '*', ''],
-    ['data/themes', '*.cfg', ''],
-    ['data/core', '*.cfg', ''],
-    ['data/COPYING.txt', '*', ''],
-    ['data/core/images/maps/wesnoth.png', '*', ''],
-    ['data/ai', '*', ''],
-    ['data/campaigns', '_main.cfg', ''],
-    ['sounds/button.wav', '*', ''],
-    ['sounds/select.wav', '*', ''],
-    ]
-
-# These files are needed to display the campaign list.
-pack2_masks = [
-    ['data/core/images/misc', '*', ''],
-    ['data/campaigns', 'campaign_image.png', ''],
-    ['data/campaigns', 'campaign_image.jpg', ''],
-    ['data/core/images/units/human-loyalists/knight.png', '*', ''],
-    ['data/core/images/units/elves-wood/lord.png', '*', ''],
-    ['data/core/images/units/human-outlaws/fugitive.png', '*', ''],
-    ['data/core/images/units/elves-wood/high-lord.png', '*', ''],
-    ['data/core/images/units/human-loyalists/general.png', '*', ''],
-    ['data/core/images/units/human-magi/elder-mage.png', '*', ''],
-    ['data/core/images/units/undead/soulless-swimmer.png', '*', ''],
-    ['data/core/images/units/orcs/ruler.png', '*', ''],
-    ['data/campaigns/Heir_To_The_Throne/images/units/konrad-lord-leading.png', '*', ''],
-    ['data/campaigns/The_South_Guard/images/deoran/horseman-commander-defend.png', '*', ''],
-    ['data/campaigns/Descent_Into_Darkness/images/units/dark-mage.png', '*', ''],
-    ['data/campaigns/The_Rise_Of_Wesnoth/images/units/noble-lord.png', '*', ''],
-    ['data/campaigns/Under_the_Burning_Suns/images/units/elves-desert/kaleh.png', '*', ''],
-    ['data/core/images/items/hammer-runic.png', '*', ''],
-    ['data/core/images/items/sceptre-of-fire.png', '*', ''],
-    ['data/core/images/scenery/dwarven-doors-closed.png', '*', ''],
-    ]
-
-pack3_masks = [
-    ['data', '*.cfg', ''],
-    ['data/core/images/terrain', '*', ''],
-    ['data/core/images/themes', '*', ''],
-    ['data/lua', '*', ''],
-    ['sounds', '*', ''],
-    ]
-
-pack4_masks = [
-    ['data/core/sounds', '*', ''],
-    ]
-
-packs = [pack0_masks, pack1_masks, pack2_masks, pack3_masks, pack4_masks]
-
-
-all_files = set()
-
-def list_path_with_mask(path, mask, exclude_mask):
-    files = set()
-    if os.path.isdir(path):
-        for (dirpath, dirnames, filenames) in os.walk(path):
-            for filename in filenames:
-                if fnmatch.fnmatch(filename, mask) and not fnmatch.fnmatch(os.path.join(dirpath, filename), exclude_mask):
-                    files.add(os.path.join(dirpath, filename))
-    else:
-        if fnmatch.fnmatch(path, mask) and not fnmatch.fnmatch(path, exclude_mask):
-            files.add(path)
-        
-    return files
-
-def list_pack_contents(masks):
-    files = set()
-    for (root_path, mask, exclude_mask) in masks:
-        roots = glob.glob(root_path)
-        for root in roots:
-            new_files = list_path_with_mask(root, mask, exclude_mask).difference(all_files)
-            files.update(new_files)
-            all_files.update(new_files)
-    return files
-
-
-def build_pack(files, out):
-    fout = open(out, "w") 
-    out_list = []
-    sz = 0
-    for f in files:
-        data = open(f).read()
-        fout.write(data)
-        out_list.append('{"/%s", "/%s", %d},\n' % (f, out, sz))
-        sz += len(data)
-    fout.close()
-    print '%s: %d files, %d bytes total' % (out, len(files), sz)
-
-    return ''.join(out_list)
-
-
-
-base_dir = sys.argv[1]
-out_list = os.path.join(os.getcwd(), 'src/nacl/generated/pack_list.h')
-os.chdir(base_dir)
-
-# define additional packs
-
-packs.append([['data/core/images/units', '*', ''], ['data/core/images/attacks', '*', '']])
-
-for path in glob.glob(os.path.join(base_dir, 'data/campaigns/*')):
-    path = path[len(base_dir):]
-    print 'Campaign: ' + path
-    packs.append([[path, '*', '']])
-
-packs.append([['data/core/images/portraits/humans', '*', '']])
-packs.append([['data/core/images/portraits', '*', '']])
-packs.append([['data/core/images', '*', '']])
-packs.append([['data', '*', 'data/core/music/*']])
-
-# build packs
-fout_list = open(out_list, 'w')
-for (index, pack) in enumerate(packs):
-    pack_files = list_pack_contents(pack)
-    out_list_data = build_pack(pack_files, 'pack' + str(index))
-    fout_list.write(out_list_data)
-fout_list.write('{"", "", 0}\n')
-fout_list.close()
diff --git a/utils/nacl/fsconfig.py b/utils/nacl/fsconfig.py
new file mode 100644
index 0000000..d41fbd5
--- /dev/null
+++ b/utils/nacl/fsconfig.py
@@ -0,0 +1,89 @@
+#!/usr/bin/python
+# Copyright (c) 2011 The Native Client Authors. All rights reserved.
+# Use of this source code is governed by a BSD-style license that can be
+# found in the NaCl-LICENSE file.
+
+import glob
+import os
+
+
+srcdir = os.path.join(os.environ['NACL_TOOLCHAIN_ROOT'], 'x86_64-nacl/usr/local/share/wesnoth')
+destdir = os.path.abspath('inst/usr/local/share/wesnoth')
+manifest = "_files"
+
+# pack description format: [root_mask, file_name_mask, file_path_exclusion_mask]
+# pack will contain 
+#   all files under (and including) the expansion of root_mask,
+#   whose names match file_name_mask,
+#   whose full path (with root_mask) does not match full_path_exclusion_mask
+packs = []
+
+packs.append([
+        ['data/languages', '*', ''],
+        ['data/hardwired', '*', ''],
+        ['images/game-icon.png', '*', ''],
+        ['images/cursors-bw', '*', ''],
+        ['images/misc/logo.png', '*', ''],
+        ])
+
+packs.append([
+        ['images', '*', ''],
+        ['data/*.cfg', '*', ''],
+        ['data/gui', '*', ''],
+        ['data/themes', '*.cfg', ''],
+        ['data/core', '*.cfg', ''],
+        ['data/COPYING.txt', '*', ''],
+        ['data/core/images/maps/wesnoth.png', '*', ''],
+        ['data/ai', '*', ''],
+        ['data/campaigns', '_main.cfg', ''],
+        ['sounds/button.wav', '*', ''],
+        ['sounds/select.wav', '*', ''],
+        ])
+
+# These files are needed to display the campaign list.
+packs.append([
+        ['data/core/images/misc', '*', ''],
+        ['data/campaigns', 'campaign_image.png', ''],
+        ['data/campaigns', 'campaign_image.jpg', ''],
+        ['data/core/images/units/human-loyalists/knight.png', '*', ''],
+        ['data/core/images/units/elves-wood/lord.png', '*', ''],
+        ['data/core/images/units/human-outlaws/fugitive.png', '*', ''],
+        ['data/core/images/units/elves-wood/high-lord.png', '*', ''],
+        ['data/core/images/units/human-loyalists/general.png', '*', ''],
+        ['data/core/images/units/human-magi/elder-mage.png', '*', ''],
+        ['data/core/images/units/undead/soulless-swimmer.png', '*', ''],
+        ['data/core/images/units/orcs/ruler.png', '*', ''],
+        ['data/campaigns/Heir_To_The_Throne/images/units/konrad-lord-leading.png', '*', ''],
+        ['data/campaigns/The_South_Guard/images/deoran/horseman-commander-defend.png', '*', ''],
+        ['data/campaigns/Descent_Into_Darkness/images/units/dark-mage.png', '*', ''],
+        ['data/campaigns/The_Rise_Of_Wesnoth/images/units/noble-lord.png', '*', ''],
+        ['data/campaigns/Under_the_Burning_Suns/images/units/elves-desert/kaleh.png', '*', ''],
+        ['data/core/images/items/hammer-runic.png', '*', ''],
+        ['data/core/images/items/sceptre-of-fire.png', '*', ''],
+        ['data/core/images/scenery/dwarven-doors-closed.png', '*', ''],
+        ])
+
+packs.append([
+        ['data', '*.cfg', ''],
+        ['data/core/images/terrain', '*', ''],
+        ['data/core/images/themes', '*', ''],
+        ['data/lua', '*', ''],
+        ['sounds', '*', ''],
+        ])
+
+packs.append([['data/core/sounds', '*', '']])
+
+packs.append([['data/core/images/units', '*', ''], ['data/core/images/attacks', '*', '']])
+
+# A pack for each campaign.
+for path in glob.glob(os.path.join(srcdir, 'data/campaigns/*')):
+    path = path[len(srcdir):]
+    if path[0] == '/':
+        path = path[1:]
+    print 'Campaign: ' + path
+    packs.append([[path, '*', '']])
+
+packs.append([['data/core/images/portraits/humans', '*', '']])
+packs.append([['data/core/images/portraits', '*', '']])
+packs.append([['data/core/images', '*', '']])
+packs.append([['data', '*', 'data/core/music/*']])
diff --git a/utils/nacl/genfs.sh b/utils/nacl/genfs.sh
deleted file mode 100755
index 0b3d9e0..0000000
--- a/utils/nacl/genfs.sh
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/bin/bash
-# Copyright (c) 2011 The Native Client Authors. All rights reserved.
-# Use of this source code is governed by a BSD-style license that can be
-# found in the NaCl-LICENSE file.
-
-BASE=$NACL_SDK_ROOT/toolchain/linux_x86/x86_64-nacl
-DIRS_OUT=src/nacl/generated/dir_list.h
-FILES_OUT=src/nacl/generated/file_list.h
-(cd $BASE/usr/local/share/wesnoth; find -type d) | perl -pe 's/^\.//' | perl -pe 's/^(.*)$/"$1",/' >$DIRS_OUT
-echo "" >>$DIRS_OUT
-(cd $BASE/usr/local/share/wesnoth; find -type f -printf "%p %s\n") | perl -pe 's/^\.//' | perl -pe 's/^(.*) (\d+)$/{"$1", $2},/' >$FILES_OUT
-echo '{"", 0}' >>$FILES_OUT
-
diff --git a/utils/nacl/howto b/utils/nacl/howto
index 6f6bfbf..78769d2 100644
--- a/utils/nacl/howto
+++ b/utils/nacl/howto
@@ -2,8 +2,8 @@ Building Wesnoth for NativeClient.
 
 1. Get the NaCl SDK from http://code.google.com/chrome/nativeclient/
 Setup enviroment:
-NACL_SDK_ROOT=<path to sdk>
-NACL_TOOLCHAIN_ROOT=$NACL_SDK_ROOT/pepper_15/toolchain/linux_x86
+export NACL_SDK_ROOT=<path to sdk>
+export NACL_TOOLCHAIN_ROOT=$NACL_SDK_ROOT/pepper_15/toolchain/linux_x86
 
 2. Get naclports: http://code.google.com/p/naclports/
 Build the ports for both x86_64 and i686:
@@ -13,24 +13,14 @@ This will install all prerequisites under $NACL_TOOLCHAIN_ROOT.
 
 3. Build Wesnoth.
 ./utils/nacl/build.sh # build and install under $NACL_TOOLCHAIN_ROOT
-
-# Scan installed files, pack them in bundles.
-# You can't realistically download 13000 small files over HTTP.
-mkdir -p src/nacl/generated
-./utils/nacl/buildpack.py $NACL_TOOLCHAIN_ROOT/x86_64-nacl/usr/local/share/wesnoth/
-./utils/nacl/genfs
-
-# Rebuild Wesnoth with the generated file metadata.
-./utils/nacl/build.sh
-
-# Build 32-bit version. No need to repeat the scanning step.
-./utils/nacl/build32.sh
+./utils/nacl/build32.sh # build the 32-bit binary
 cp wesnoth $NACL_TOOLCHAIN_ROOT/x86_64-nacl/usr/local/share/bin/wesnoth32
 
 4. Deploy
-Copy stuff from utils/nacl/static to $NACL_TOOLCHAIN_ROOT/x86_64-nacl
-
-./install.sh inst
+# Scan installed files, pack them in bundles.
+# You can't realistically download 13000 small files over HTTP.
+# This will place Wesnoth binaries and packed data under inst/.
+./utils/nacl/install.sh
 
 Upload inst/ to any static file hosting.
 Open wesnoth.html in Chromium >= 15. At the moment you need to either enable NativeClient in
diff --git a/utils/nacl/install.sh b/utils/nacl/install.sh
index 8f887bc..f5fe373 100755
--- a/utils/nacl/install.sh
+++ b/utils/nacl/install.sh
@@ -1,31 +1,16 @@
 #!/bin/bash
-# Copyright (c) 2011 The Native Client Authors. All rights reserved.
-# Use of this source code is governed by a BSD-style license that can be
-# found in the NaCl-LICENSE file.
-
 set -e
 
-DST=$1
-
-if [ z$DST == z ]; then
-    echo "Need dstdir"
-    exit 1
-fi
-
-if [ -d $DST ]; then
-    echo "$DST already exists"
-    exit 1
-fi
-
+DST=inst
 ROOT=$NACL_TOOLCHAIN_ROOT/x86_64-nacl
-WESNOTH=$ROOT/usr/local/share/wesnoth
 
-mkdir $DST
-cp -v $ROOT/wesnoth.html $DST/
-cp -v $ROOT/wesnoth.nmf $DST/
-cp -v $ROOT/wesnoth.js $DST/
-cp -v $ROOT/check_browser.js $DST/
-cp -v $ROOT/peppermount_helper.js $DST/
+rm -rf $DST
+$ROOT/usr/lib/nacl-mounts/util/genfs.py ./utils/nacl/fsconfig.py
+INDEX=`(cd $DST/usr/local/share/wesnoth && ls _files*)`
+echo $INDEX
+
+cp utils/nacl/static/* $DST/
+echo "http2_files='/$INDEX';" >$DST/fs.js
 
 mkdir -p $DST/usr/local/bin/
 cp -v $ROOT/usr/local/bin/wesnoth $ROOT/usr/local/bin/wesnoth32 $DST/usr/local/bin/
@@ -37,12 +22,3 @@ done
 for lib in `cat $ROOT/wesnoth.nmf | grep '"url": "lib64' | perl -pe 's/^.*?url": "lib64\/(.*)".*/$1/'`; do
     cp -v $ROOT/lib64/$lib $DST/lib64/$lib
 done
-
-mkdir -p $DST/usr/local/share/wesnoth
-cp -v $ROOT/usr/local/share/wesnoth/pack* $DST/usr/local/share/wesnoth/
-
-mkdir -p $DST/usr/local/share/wesnoth/data/core/music/
-cp -rv $ROOT/usr/local/share/wesnoth/data/core/music/* $DST/usr/local/share/wesnoth/data/core/music/
-
-mkdir -p $DST/usr/local/share/wesnoth/fonts/
-cp -rv $ROOT/usr/local/share/wesnoth/fonts/* $DST/usr/local/share/wesnoth/fonts/
diff --git a/utils/nacl/static/wesnoth.html b/utils/nacl/static/wesnoth.html
index 54b6866..3b0afc2 100644
--- a/utils/nacl/static/wesnoth.html
+++ b/utils/nacl/static/wesnoth.html
@@ -18,6 +18,7 @@
       </canvas>
     </div>
 
+    <script src="fs.js"></script>
     <script src="peppermount_helper.js"></script>
     <script src="wesnoth.js"></script>
 
diff --git a/utils/nacl/static/wesnoth.js b/utils/nacl/static/wesnoth.js
index bf26385..19f495c 100644
--- a/utils/nacl/static/wesnoth.js
+++ b/utils/nacl/static/wesnoth.js
@@ -79,6 +79,7 @@ function requestQuotaAndStartWesnoth() {
                 embed.setAttribute('height', 800);
                 embed.setAttribute('src', 'wesnoth.nmf');
                 embed.setAttribute('type', 'application/x-nacl');
+		embed.setAttribute('http2_files', http2_files);
                 var div = document.getElementById("nacl_div");
                 div.appendChild(embed);
                 div.addEventListener('progress', HandleProgress, true);
