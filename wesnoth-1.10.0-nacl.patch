diff --git a/src/filesystem.cpp b/src/filesystem.cpp
index 623c083..e5f7190 100644
--- a/src/filesystem.cpp
+++ b/src/filesystem.cpp
@@ -687,7 +687,9 @@ const std::string &get_cache_dir()
 {
 	if (cache_dir.empty())
 	{
-#if defined(_X11) && !defined(PREFERENCES_DIR)
+#ifdef __native_client__
+		cache_dir = "/wesnoth-userdata/cache";
+#elif defined(_X11) && !defined(PREFERENCES_DIR)
 		char const *xdg_cache = getenv("XDG_CACHE_HOME");
 		if (!xdg_cache || xdg_cache[0] == '\0') {
 			xdg_cache = getenv("HOME");
@@ -865,7 +867,7 @@ file_tree_checksum::file_tree_checksum()
 
 file_tree_checksum::file_tree_checksum(const config& cfg) :
 	nfiles	(lexical_cast_default<size_t>(cfg["nfiles"])),
-	sum_size(lexical_cast_default<size_t>(cfg["size"])),
+	sum_size(lexical_cast_default<size_t>(cfg["size"].str().substr(1, std::string::npos))),
 	modified(lexical_cast_default<time_t>(cfg["modified"]))
 {
 }
@@ -873,7 +875,7 @@ file_tree_checksum::file_tree_checksum(const config& cfg) :
 void file_tree_checksum::write(config& cfg) const
 {
 	cfg["nfiles"] = lexical_cast<std::string>(nfiles);
-	cfg["size"] = lexical_cast<std::string>(sum_size);
+	cfg["size"] = "i" + lexical_cast<std::string>(sum_size);
 	cfg["modified"] = lexical_cast<std::string>(modified);
 }
 
diff --git a/src/nacl/SConscript b/src/nacl/SConscript
index c3e7f85..c627187 100644
--- a/src/nacl/SConscript
+++ b/src/nacl/SConscript
@@ -1,7 +1,5 @@
 Import("env")
 
-env.Append(CPPPATH=["#/src/nacl/generated", "#/src/nacl"])
-
 libwesnoth_nacl = env.Library("wesnoth_nacl", ["plugin.cc"])
 
 Return("libwesnoth_nacl")
diff --git a/src/nacl/dir_list.h b/src/nacl/dir_list.h
deleted file mode 100644
index fe282fb..0000000
--- a/src/nacl/dir_list.h
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Intentionally empty */
-
diff --git a/src/nacl/file_list.h b/src/nacl/file_list.h
deleted file mode 100644
index fe282fb..0000000
--- a/src/nacl/file_list.h
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Intentionally empty */
-
diff --git a/src/nacl/pack_list.h b/src/nacl/pack_list.h
deleted file mode 100644
index fe282fb..0000000
--- a/src/nacl/pack_list.h
+++ /dev/null
@@ -1,2 +0,0 @@
-/* Intentionally empty */
-
diff --git a/src/nacl/plugin.cc b/src/nacl/plugin.cc
index fcea550..802e103 100644
--- a/src/nacl/plugin.cc
+++ b/src/nacl/plugin.cc
@@ -21,26 +21,7 @@ extern int wesnoth_main(int argc, char **argv);
 #include <nacl-mounts/base/MainThreadRunner.h>
 #include <nacl-mounts/http2/HTTP2Mount.h>
 #include <nacl-mounts/pepper/PepperMount.h>
-
-
-const char* http_dirs[] = {
-#include <dir_list.h>
-};
-
-struct http_file_info {
-  const char* path;
-  size_t size;
-} http_files[] = {
-#include <file_list.h>
-};
-
-struct http_pack_info {
-  const char* path;
-  const char* pack_path;
-  off_t offset;
-} http_packs[] = {
-#include <pack_list.h>
-};
+#include <nacl-mounts/buffer/BufferMount.h>
 
 
 class PluginInstance : public pp::Instance {
@@ -50,9 +31,11 @@ class PluginInstance : public pp::Instance {
                                                   width_(0),
                                                   height_(0),
                                                   progress_handler_(this),
-                                                  directory_reader_(this) {
+                                                  directory_reader_(this),
+                                                  http2_files_(""),
+                                                  http2_files2_("") {
     RequestInputEvents(PP_INPUTEVENT_CLASS_MOUSE);
-    RequestFilteringInputEvents(PP_INPUTEVENT_CLASS_KEYBOARD);
+    RequestFilteringInputEvents(PP_INPUTEVENT_CLASS_WHEEL | PP_INPUTEVENT_CLASS_KEYBOARD);
 
     proxy_ = KernelProxy::KPInstance();
     runner_ = new MainThreadRunner(this);
@@ -101,7 +84,17 @@ class PluginInstance : public pp::Instance {
     directory_reader_.HandleResponse(s);
   }
 
-  bool Init(int argc, const char* argn[], const char* argv[]) {
+  bool Init(uint32_t argc, const char* argn[], const char* argv[]) {
+    for (int i = 0; i < argc; ++i) {
+      std::string s = argn[i];
+      if (s == "http2_files") {
+	http2_files_ = argv[i];
+      } else if (s == "http2_files2") {
+	http2_files2_ = argv[i];
+      }
+    }
+    fprintf(stderr, "http2_files='%s'\n", http2_files_.c_str());
+    fflush(stderr);
     return true;
   }
 
@@ -113,6 +106,8 @@ class PluginInstance : public pp::Instance {
   KernelProxy* proxy_;
   MainThreadRunner* runner_;
   pp::FileSystem* fs_;
+  std::string http2_files_;
+  std::string http2_files2_;
 
   static void* sdl_thread_static(void* param) {
     return reinterpret_cast<PluginInstance*>(param)->sdl_thread();
@@ -123,55 +118,49 @@ class PluginInstance : public pp::Instance {
     fflush(stderr);
 
     // Setup writable homedir.
-    PepperMount* pepper_mount = new PepperMount(runner_, fs_, 20 * 1024 * 1024);
-    pepper_mount->SetDirectoryReader(&directory_reader_);
-    pepper_mount->SetPathPrefix("/wesnoth-userdata");
+    PepperMount* rw_mount = new PepperMount(runner_, fs_, 20 * 1024 * 1024);
+    rw_mount->SetDirectoryReader(&directory_reader_);
+    rw_mount->SetPathPrefix("/wesnoth-userdata");
 
     proxy_->mkdir("/wesnoth-userdata", 0777);
-    int res = proxy_->mount("/wesnoth-userdata", pepper_mount);
+    // 20Mb NaCl-side memory cache.
+    int res = proxy_->mount("/wesnoth-userdata", new BufferMount(rw_mount, 4096, 5120));
 
     // The following lines can be removed when nacl-mounts starts intercepting mkdir() calls.
+    proxy_->mkdir("/wesnoth-userdata/cache", 0777);
     proxy_->mkdir("/wesnoth-userdata/saves", 0777);
 
     // Setup r/o data directory in /usr/local/share/wesnoth
-    HTTP2Mount* http2_mount = new HTTP2Mount(runner_, "./usr/local/share/wesnoth");
-    http2_mount->SetLocalCache(fs_, 350*1024*1024, "/wesnoth0", true);
-    http2_mount->SetProgressHandler(&progress_handler_);
+    HTTP2Mount* ro_mount = new HTTP2Mount(runner_, "./usr/local/share/wesnoth");
+    ro_mount->SetLocalCache(fs_, 350*1024*1024, "/wesnoth0", true);
+    ro_mount->SetProgressHandler(&progress_handler_);
  
     fprintf(stderr, "Registering known files.\n");
-    fflush(stderr);
-    for (int i = 0; i < sizeof(http_dirs) / sizeof(*http_dirs); ++i) {
-      char* path = (char*)http_dirs[i];
-      if (path && *path)
-        http2_mount->AddDir(path);
-    }
-
-    for (int i = 0; i < sizeof(http_files) / sizeof(*http_files); ++i) {
-      char* path = (char*)http_files[i].path;
-      size_t size = http_files[i].size;
-      if (path && *path)
-        http2_mount->AddFile(path, size);
-    }
-
-    for (int i = 0; i < sizeof(http_packs) / sizeof(*http_packs); ++i) {
-      char* path = (char*)http_packs[i].path;
-      char* pack_path = (char*)http_packs[i].pack_path;
-      off_t offset = http_packs[i].offset;
-      if (path && *path) {
-        http2_mount->SetInPack(path, pack_path, offset);
-      }
-    }
-
-    http2_mount->SetInMemory("/fonts/Andagii.ttf", true);
-    http2_mount->SetInMemory("/fonts/DejaVuSans.ttf", true);
-    http2_mount->SetInMemory("/fonts/wqy-zenhei.ttc", true);
+    ro_mount->ReadManifest(http2_files_);
 
     fprintf(stderr, "Mounting the filesystem.\n");
     fflush(stderr);
     proxy_->mkdir("/usr", 0777);
     proxy_->mkdir("/usr/local", 0777);
     proxy_->mkdir("/usr/local/share", 0777);
-    res = proxy_->mount("/usr/local/share/wesnoth", http2_mount);
+    // 100Mb NaCl-side memory cache.
+    res = proxy_->mount("/usr/local/share/wesnoth", new BufferMount(ro_mount, 1048576, 100));
+
+    // Setup r/o data directory in /lib/locale
+    HTTP2Mount* ro_mount2 = new HTTP2Mount(runner_, "./lib/locale");
+    ro_mount2->SetLocalCache(fs_, 350*1024*1024, "/locale0", true);
+    ro_mount2->SetProgressHandler(&progress_handler_);
+ 
+    fprintf(stderr, "Registering known files.\n");
+    ro_mount2->ReadManifest(http2_files2_);
+
+    fprintf(stderr, "Mounting the filesystem.\n");
+    fflush(stderr);
+    proxy_->mkdir("/lib", 0777);
+    proxy_->mkdir("/lib/locale", 0777);
+    // 10Mb NaCl-side memory cache.
+    res = proxy_->mount("/lib/locale", new BufferMount(ro_mount2, 1048576, 10));
+
     if (!res) {
       fprintf(stderr, "FS initialization success.\n");
     } else {
diff --git a/utils/nacl/build.sh b/utils/nacl/build.sh
index 7a69098..5c302f6 100755
--- a/utils/nacl/build.sh
+++ b/utils/nacl/build.sh
@@ -8,8 +8,8 @@ set -e -x
 ROOT=${NACL_TOOLCHAIN_ROOT:-$HOME/root/nacl-sdk}
 PATH=$ROOT/bin:$ROOT/x86_64-nacl/usr/bin:$PATH
 
-PKG_CONFIG_PATH=$ROOT/x86_64-nacl/usr/lib/pkgconfig scons -j15 host=x86_64-nacl \
+PKG_CONFIG_PATH=$ROOT/x86_64-nacl/usr/lib/pkgconfig scons -j5 host=x86_64-nacl \
   boostdir=$ROOT/x86_64-nacl/usr/include/boost \
-  boostlibdir=$ROOT/x86_64-nacl/usr/lib sdldir=$ROOT/x86_64-nacl/usr nls=no \
+  boostlibdir=$ROOT/x86_64-nacl/usr/lib sdldir=$ROOT/x86_64-nacl/usr \
   destdir=$ROOT/x86_64-nacl \
   build=release wesnoth install
diff --git a/utils/nacl/build32.sh b/utils/nacl/build32.sh
index d7571e2..aa9adb7 100755
--- a/utils/nacl/build32.sh
+++ b/utils/nacl/build32.sh
@@ -8,7 +8,7 @@ set -e -x
 ROOT=${NACL_TOOLCHAIN_ROOT:-$HOME/root/nacl-sdk}
 PATH=$ROOT/bin:$ROOT/i686-nacl/usr/bin:$PATH
 
-PKG_CONFIG_PATH=$ROOT/i686-nacl/usr/lib/pkgconfig scons -j15 host=i686-nacl \
+PKG_CONFIG_PATH=$ROOT/i686-nacl/usr/lib/pkgconfig scons -j5 host=i686-nacl \
   boostdir=$ROOT/i686-nacl/usr/include/boost \
   boostlibdir=$ROOT/i686-nacl/usr/lib sdldir=$ROOT/i686-nacl/usr nls=no \
   destdir=$ROOT/i686-nacl \
diff --git a/utils/nacl/buildpack.py b/utils/nacl/buildpack.py
deleted file mode 100644
index a603e40..0000000
--- a/utils/nacl/buildpack.py
+++ /dev/null
@@ -1,145 +0,0 @@
-#!/usr/bin/python
-# Copyright (c) 2011 The Native Client Authors. All rights reserved.
-# Use of this source code is governed by a BSD-style license that can be
-# found in the NaCl-LICENSE file.
-
-import shutil
-import glob
-import os
-import fnmatch
-import sys
-
-
-# pack description format: [root_mask, file_name_mask, file_path_exclusion_mask]
-# pack will contain 
-#   all files under (and including) the expansion of root_mask,
-#   whose names match file_name_mask,
-#   whose full path (with root_mask) does not match full_path_exclusion_mask
-pack0_masks = [
-    ['data/languages', '*', ''],
-    ['data/hardwired', '*', ''],
-    ['images/game-icon.png', '*', ''],
-    ['images/cursors-bw', '*', ''],
-    ['images/misc/logo.png', '*', ''],
-    ]
-
-pack1_masks = [
-    ['images', '*', ''],
-    ['data/*.cfg', '*', ''],
-    ['data/gui', '*', ''],
-    ['data/themes', '*.cfg', ''],
-    ['data/core', '*.cfg', ''],
-    ['data/COPYING.txt', '*', ''],
-    ['data/core/images/maps/wesnoth.png', '*', ''],
-    ['data/ai', '*', ''],
-    ['data/campaigns', '_main.cfg', ''],
-    ['sounds/button.wav', '*', ''],
-    ['sounds/select.wav', '*', ''],
-    ]
-
-# These files are needed to display the campaign list.
-pack2_masks = [
-    ['data/core/images/misc', '*', ''],
-    ['data/campaigns', 'campaign_image.png', ''],
-    ['data/campaigns', 'campaign_image.jpg', ''],
-    ['data/core/images/units/human-loyalists/knight.png', '*', ''],
-    ['data/core/images/units/elves-wood/lord.png', '*', ''],
-    ['data/core/images/units/human-outlaws/fugitive.png', '*', ''],
-    ['data/core/images/units/elves-wood/high-lord.png', '*', ''],
-    ['data/core/images/units/human-loyalists/general.png', '*', ''],
-    ['data/core/images/units/human-magi/elder-mage.png', '*', ''],
-    ['data/core/images/units/undead/soulless-swimmer.png', '*', ''],
-    ['data/core/images/units/orcs/ruler.png', '*', ''],
-    ['data/campaigns/Heir_To_The_Throne/images/units/konrad-lord-leading.png', '*', ''],
-    ['data/campaigns/The_South_Guard/images/deoran/horseman-commander-defend.png', '*', ''],
-    ['data/campaigns/Descent_Into_Darkness/images/units/dark-mage.png', '*', ''],
-    ['data/campaigns/The_Rise_Of_Wesnoth/images/units/noble-lord.png', '*', ''],
-    ['data/campaigns/Under_the_Burning_Suns/images/units/elves-desert/kaleh.png', '*', ''],
-    ['data/core/images/items/hammer-runic.png', '*', ''],
-    ['data/core/images/items/sceptre-of-fire.png', '*', ''],
-    ['data/core/images/scenery/dwarven-doors-closed.png', '*', ''],
-    ]
-
-pack3_masks = [
-    ['data', '*.cfg', ''],
-    ['data/core/images/terrain', '*', ''],
-    ['data/core/images/themes', '*', ''],
-    ['data/lua', '*', ''],
-    ['sounds', '*', ''],
-    ]
-
-pack4_masks = [
-    ['data/core/sounds', '*', ''],
-    ]
-
-packs = [pack0_masks, pack1_masks, pack2_masks, pack3_masks, pack4_masks]
-
-
-all_files = set()
-
-def list_path_with_mask(path, mask, exclude_mask):
-    files = set()
-    if os.path.isdir(path):
-        for (dirpath, dirnames, filenames) in os.walk(path):
-            for filename in filenames:
-                if fnmatch.fnmatch(filename, mask) and not fnmatch.fnmatch(os.path.join(dirpath, filename), exclude_mask):
-                    files.add(os.path.join(dirpath, filename))
-    else:
-        if fnmatch.fnmatch(path, mask) and not fnmatch.fnmatch(path, exclude_mask):
-            files.add(path)
-        
-    return files
-
-def list_pack_contents(masks):
-    files = set()
-    for (root_path, mask, exclude_mask) in masks:
-        roots = glob.glob(root_path)
-        for root in roots:
-            new_files = list_path_with_mask(root, mask, exclude_mask).difference(all_files)
-            files.update(new_files)
-            all_files.update(new_files)
-    return files
-
-
-def build_pack(files, out):
-    fout = open(out, "w") 
-    out_list = []
-    sz = 0
-    for f in files:
-        data = open(f).read()
-        fout.write(data)
-        out_list.append('{"/%s", "/%s", %d},\n' % (f, out, sz))
-        sz += len(data)
-    fout.close()
-    print '%s: %d files, %d bytes total' % (out, len(files), sz)
-
-    return ''.join(out_list)
-
-
-
-base_dir = sys.argv[1]
-out_list = os.path.join(os.getcwd(), 'src/nacl/generated/pack_list.h')
-os.chdir(base_dir)
-
-# define additional packs
-
-packs.append([['data/core/images/units', '*', ''], ['data/core/images/attacks', '*', '']])
-
-for path in glob.glob(os.path.join(base_dir, 'data/campaigns/*')):
-    path = path[len(base_dir):]
-    print 'Campaign: ' + path
-    packs.append([[path, '*', '']])
-
-packs.append([['data/core/images/portraits/humans', '*', '']])
-packs.append([['data/core/images/portraits', '*', '']])
-packs.append([['data/core/images', '*', '']])
-packs.append([['data', '*', 'data/core/music/*']])
-
-# build packs
-fout_list = open(out_list, 'w')
-for (index, pack) in enumerate(packs):
-    pack_files = list_pack_contents(pack)
-    out_list_data = build_pack(pack_files, 'pack' + str(index))
-    fout_list.write(out_list_data)
-fout_list.write('{"", "", 0}\n')
-fout_list.close()
diff --git a/utils/nacl/fsconfig.py b/utils/nacl/fsconfig.py
new file mode 100644
index 0000000..f7f7ecd
--- /dev/null
+++ b/utils/nacl/fsconfig.py
@@ -0,0 +1,97 @@
+#!/usr/bin/python
+# Copyright (c) 2011 The Native Client Authors. All rights reserved.
+# Use of this source code is governed by a BSD-style license that can be
+# found in the NaCl-LICENSE file.
+
+import glob
+import os
+
+
+srcdir = os.path.join(os.environ['NACL_TOOLCHAIN_ROOT'], 'x86_64-nacl/usr/local/share/wesnoth')
+destdir = os.path.abspath('inst/usr/local/share/wesnoth')
+manifest = "_files"
+
+# pack description format: [root_mask, file_name_mask, file_path_exclusion_mask]
+# pack will contain 
+#   all files under (and including) the expansion of root_mask,
+#   whose names match file_name_mask,
+#   whose full path (with root_mask) does not match full_path_exclusion_mask
+packs = []
+
+packs.append([
+        ['data/languages', '*', ''],
+        ['data/hardwired', '*', ''],
+        ['images/game-icon.png', '*', ''],
+        ['images/cursors-bw', '*', ''],
+        ['images/misc/logo.png', '*', ''],
+        ])
+
+packs.append([
+        ['images', '*', ''],
+        ['data/*.cfg', '*', ''],
+        ['data/gui', '*', ''],
+        ['data/themes', '*.cfg', ''],
+        ['data/core', '*.cfg', ''],
+        ['data/COPYING.txt', '*', ''],
+        ['data/core/images/maps/wesnoth.png', '*', ''],
+        ['data/ai', '*', ''],
+        ['data/campaigns', '_main.cfg', ''],
+        ['sounds/button.wav', '*', ''],
+        ['sounds/select.wav', '*', ''],
+        ])
+
+# These files are needed to display the campaign list.
+packs.append([
+        ['data/core/images/misc', '*', ''],
+        ['data/campaigns', 'campaign_image.png', ''],
+        ['data/campaigns', 'campaign_image.jpg', ''],
+        ['data/core/images/units/human-loyalists/knight.png', '*', ''],
+        ['data/core/images/units/elves-wood/lord.png', '*', ''],
+        ['data/core/images/units/human-outlaws/fugitive.png', '*', ''],
+        ['data/core/images/units/elves-wood/high-lord.png', '*', ''],
+        ['data/core/images/units/human-loyalists/general.png', '*', ''],
+        ['data/core/images/units/human-magi/elder-mage.png', '*', ''],
+        ['data/core/images/units/undead/soulless-swimmer.png', '*', ''],
+        ['data/core/images/units/orcs/ruler.png', '*', ''],
+        ['data/campaigns/Heir_To_The_Throne/images/units/konrad-lord-leading.png', '*', ''],
+        ['data/campaigns/The_South_Guard/images/deoran/horseman-commander-defend.png', '*', ''],
+        ['data/campaigns/Descent_Into_Darkness/images/units/dark-mage.png', '*', ''],
+        ['data/campaigns/The_Rise_Of_Wesnoth/images/units/noble-lord.png', '*', ''],
+        ['data/campaigns/Under_the_Burning_Suns/images/units/elves-desert/kaleh.png', '*', ''],
+        ['data/core/images/items/hammer-runic.png', '*', ''],
+        ['data/core/images/items/sceptre-of-fire.png', '*', ''],
+        ['data/core/images/scenery/dwarven-doors-closed.png', '*', ''],
+        ])
+
+packs.append([
+        ['data', '*.cfg', ''],
+        ['data/core/images/terrain', '*', ''],
+        ['data/core/images/themes', '*', ''],
+        ['data/lua', '*', ''],
+        ['sounds', '*', ''],
+        ])
+
+packs.append([['data/core/sounds', '*', '']])
+
+packs.append([['data/core/images/units', '*', ''], ['data/core/images/attacks', '*', '']])
+
+# A pack for each campaign.
+for path in glob.glob(os.path.join(srcdir, 'data/campaigns/*')):
+    path = path[len(srcdir):]
+    if path[0] == '/':
+        path = path[1:]
+    print 'Campaign: ' + path
+    packs.append([[path, '*', '']])
+
+packs.append([['data/core/images/portraits/humans', '*', '']])
+packs.append([['data/core/images/portraits', '*', '']])
+packs.append([['data/core/images', '*', '']])
+packs.append([['data', '*', 'data/core/music/*']])
+
+# Translations.
+for path in glob.glob(os.path.join(srcdir, 'translations/*')):
+    path = path[len(srcdir):]
+    if path[0] == '/':
+        path = path[1:]
+    print 'Translation: ' + path
+    packs.append([[path, '*', '']])
diff --git a/utils/nacl/fsconfig2.py b/utils/nacl/fsconfig2.py
new file mode 100644
index 0000000..1fc717e
--- /dev/null
+++ b/utils/nacl/fsconfig2.py
@@ -0,0 +1,28 @@
+#!/usr/bin/python
+# Copyright (c) 2011 The Native Client Authors. All rights reserved.
+# Use of this source code is governed by a BSD-style license that can be
+# found in the NaCl-LICENSE file.
+
+import glob
+import os
+
+
+srcdir = os.path.join(os.environ['NACL_TOOLCHAIN_ROOT'], 'x86_64-nacl/lib/locale')
+destdir = os.path.abspath('inst/lib/locale')
+manifest = "_files"
+
+# pack description format: [root_mask, file_name_mask, file_path_exclusion_mask]
+# pack will contain 
+#   all files under (and including) the expansion of root_mask,
+#   whose names match file_name_mask,
+#   whose full path (with root_mask) does not match full_path_exclusion_mask
+packs = []
+
+# System locales.
+for path in glob.glob(os.path.join(srcdir, '*')):
+    path = path[len(srcdir):]
+    if path[0] == '/':
+        path = path[1:]
+    print 'Locale: ' + path
+    packs.append([[path, '*', '']])
+
diff --git a/utils/nacl/genfs.sh b/utils/nacl/genfs.sh
deleted file mode 100755
index 0b3d9e0..0000000
--- a/utils/nacl/genfs.sh
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/bin/bash
-# Copyright (c) 2011 The Native Client Authors. All rights reserved.
-# Use of this source code is governed by a BSD-style license that can be
-# found in the NaCl-LICENSE file.
-
-BASE=$NACL_SDK_ROOT/toolchain/linux_x86/x86_64-nacl
-DIRS_OUT=src/nacl/generated/dir_list.h
-FILES_OUT=src/nacl/generated/file_list.h
-(cd $BASE/usr/local/share/wesnoth; find -type d) | perl -pe 's/^\.//' | perl -pe 's/^(.*)$/"$1",/' >$DIRS_OUT
-echo "" >>$DIRS_OUT
-(cd $BASE/usr/local/share/wesnoth; find -type f -printf "%p %s\n") | perl -pe 's/^\.//' | perl -pe 's/^(.*) (\d+)$/{"$1", $2},/' >$FILES_OUT
-echo '{"", 0}' >>$FILES_OUT
-
diff --git a/utils/nacl/howto b/utils/nacl/howto
index 6f6bfbf..b449e63 100644
--- a/utils/nacl/howto
+++ b/utils/nacl/howto
@@ -2,8 +2,8 @@ Building Wesnoth for NativeClient.
 
 1. Get the NaCl SDK from http://code.google.com/chrome/nativeclient/
 Setup enviroment:
-NACL_SDK_ROOT=<path to sdk>
-NACL_TOOLCHAIN_ROOT=$NACL_SDK_ROOT/pepper_15/toolchain/linux_x86
+export NACL_SDK_ROOT=<path to sdk>
+export NACL_TOOLCHAIN_ROOT=$NACL_SDK_ROOT/pepper_15/toolchain/linux_x86
 
 2. Get naclports: http://code.google.com/p/naclports/
 Build the ports for both x86_64 and i686:
@@ -13,24 +13,26 @@ This will install all prerequisites under $NACL_TOOLCHAIN_ROOT.
 
 3. Build Wesnoth.
 ./utils/nacl/build.sh # build and install under $NACL_TOOLCHAIN_ROOT
+./utils/nacl/build32.sh # build the 32-bit binary
+cp wesnoth $NACL_TOOLCHAIN_ROOT/x86_64-nacl/usr/local/bin/wesnoth32
+
+3.5 Optional: build system locales
+This is required to get game in languages other than English.
+NaCl SDK comes without any prebuilt locales. This may take a while.
+Get eglibc-2.9 source, and build localedef program with --exec-prefix=$NACL_TOOLCHAIN_ROOT/x86_64-nacl.
+Then,
+cd $NACL_TOOLCHAIN_ROOT/x86_64-nacl
+mkdir -p lib/locale
+gunzip share/i18n/charmaps/UTF-8.gz
+for i in `cd share/i18n/locales; ls`; do
+  echo $i; /path/to/localedef -f UTF-8 -i $i --no-archive $i.UTF-8;
+done
 
+4. Deploy
 # Scan installed files, pack them in bundles.
 # You can't realistically download 13000 small files over HTTP.
-mkdir -p src/nacl/generated
-./utils/nacl/buildpack.py $NACL_TOOLCHAIN_ROOT/x86_64-nacl/usr/local/share/wesnoth/
-./utils/nacl/genfs
-
-# Rebuild Wesnoth with the generated file metadata.
-./utils/nacl/build.sh
-
-# Build 32-bit version. No need to repeat the scanning step.
-./utils/nacl/build32.sh
-cp wesnoth $NACL_TOOLCHAIN_ROOT/x86_64-nacl/usr/local/share/bin/wesnoth32
-
-4. Deploy
-Copy stuff from utils/nacl/static to $NACL_TOOLCHAIN_ROOT/x86_64-nacl
-
-./install.sh inst
+# This will place Wesnoth binaries and packed data under inst/.
+./utils/nacl/install.sh
 
 Upload inst/ to any static file hosting.
 Open wesnoth.html in Chromium >= 15. At the moment you need to either enable NativeClient in
diff --git a/utils/nacl/install.sh b/utils/nacl/install.sh
index 8f887bc..59528df 100755
--- a/utils/nacl/install.sh
+++ b/utils/nacl/install.sh
@@ -1,48 +1,28 @@
 #!/bin/bash
-# Copyright (c) 2011 The Native Client Authors. All rights reserved.
-# Use of this source code is governed by a BSD-style license that can be
-# found in the NaCl-LICENSE file.
-
 set -e
 
-DST=$1
-
-if [ z$DST == z ]; then
-    echo "Need dstdir"
-    exit 1
-fi
-
-if [ -d $DST ]; then
-    echo "$DST already exists"
-    exit 1
-fi
-
+DST=inst
 ROOT=$NACL_TOOLCHAIN_ROOT/x86_64-nacl
-WESNOTH=$ROOT/usr/local/share/wesnoth
 
-mkdir $DST
-cp -v $ROOT/wesnoth.html $DST/
-cp -v $ROOT/wesnoth.nmf $DST/
-cp -v $ROOT/wesnoth.js $DST/
-cp -v $ROOT/check_browser.js $DST/
-cp -v $ROOT/peppermount_helper.js $DST/
+rm -rf $DST
+$ROOT/usr/lib/nacl-mounts/util/genfs.py ./utils/nacl/fsconfig.py
+$ROOT/usr/lib/nacl-mounts/util/genfs.py ./utils/nacl/fsconfig2.py
+INDEX=`(cd $DST/usr/local/share/wesnoth && ls _files*)`
+INDEXX=`(cd $DST/lib/locale && ls _files*)`
+echo $INDEX
+echo $INDEXX
+
+cp utils/nacl/static/* $DST/
+echo "http2_files='/$INDEX';" >$DST/fs.js
+echo "http2_files2='/$INDEXX';" >>$DST/fs.js
 
 mkdir -p $DST/usr/local/bin/
 cp -v $ROOT/usr/local/bin/wesnoth $ROOT/usr/local/bin/wesnoth32 $DST/usr/local/bin/
 
 mkdir $DST/lib32 $DST/lib64
-for lib in `cat $ROOT/wesnoth.nmf | grep '"url": "lib32' | perl -pe 's/^.*?url": "lib32\/(.*)".*/$1/'`; do
+for lib in `cat $DST/wesnoth.nmf | grep '"url": "lib32' | perl -pe 's/^.*?url": "lib32\/(.*)".*/$1/'`; do
     cp -v $ROOT/lib32/$lib $DST/lib32/$lib
 done
-for lib in `cat $ROOT/wesnoth.nmf | grep '"url": "lib64' | perl -pe 's/^.*?url": "lib64\/(.*)".*/$1/'`; do
+for lib in `cat $DST/wesnoth.nmf | grep '"url": "lib64' | perl -pe 's/^.*?url": "lib64\/(.*)".*/$1/'`; do
     cp -v $ROOT/lib64/$lib $DST/lib64/$lib
 done
-
-mkdir -p $DST/usr/local/share/wesnoth
-cp -v $ROOT/usr/local/share/wesnoth/pack* $DST/usr/local/share/wesnoth/
-
-mkdir -p $DST/usr/local/share/wesnoth/data/core/music/
-cp -rv $ROOT/usr/local/share/wesnoth/data/core/music/* $DST/usr/local/share/wesnoth/data/core/music/
-
-mkdir -p $DST/usr/local/share/wesnoth/fonts/
-cp -rv $ROOT/usr/local/share/wesnoth/fonts/* $DST/usr/local/share/wesnoth/fonts/
diff --git a/utils/nacl/static/check_browser.js b/utils/nacl/static/check_browser.js
index 2e735b7..9636ad0 100644
--- a/utils/nacl/static/check_browser.js
+++ b/utils/nacl/static/check_browser.js
@@ -1,7 +1,7 @@
 /*
  * Copyright (c) 2011 The Native Client Authors. All rights reserved.
  * Use of this source code is governed by a BSD-style license that can be
- * found in the NaCl-LICENSE file.
+ * found in the LICENSE file.
  */
 
 /**
diff --git a/utils/nacl/static/peppermount_helper.js b/utils/nacl/static/peppermount_helper.js
index 1f542db..a831ddd 100644
--- a/utils/nacl/static/peppermount_helper.js
+++ b/utils/nacl/static/peppermount_helper.js
@@ -1,9 +1,3 @@
-/*
- * Copyright (c) 2011 The Native Client Authors. All rights reserved.
- * Use of this source code is governed by a BSD-style license that can be
- * found in the NaCl-LICENSE file.
- */
-
 function toArray(list) {
   return Array.prototype.slice.call(list || [], 0);
 }
@@ -39,8 +33,8 @@ function errorHandler(e) {
 function listResults(entries) {
     s = ''
     entries.forEach(function(entry, i) {
-      s += entry.name;
-      s += '\n';
+	s += entry.name;
+	s += '\n';
     });
     console.log('entries: ' + s);
     document.getElementById('wesnoth').postMessage(s);
diff --git a/utils/nacl/static/wesnoth.html b/utils/nacl/static/wesnoth.html
index 54b6866..e485d61 100644
--- a/utils/nacl/static/wesnoth.html
+++ b/utils/nacl/static/wesnoth.html
@@ -1,28 +1,47 @@
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
-          "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 <html>
-  <!--
-  Copyright (c) 2011 The Native Client Authors. All rights reserved.
-  Use of this source code is governed by a BSD-style license that can be
-  found in the NaCl-LICENSE file.
-  -->
-  <head>
-    <title>Wesnoth NativeClient demo</title>
-    <script type="text/javascript" src="check_browser.js"></script>
-  </head>
-    <body style="color:gray;background-color:#776655">
-    <div id="nacl_div" style="text-align:center">
-      <canvas id="progress_bar"
-              width="1024" height="20">
-        Your browser does not support HTML5 Canvas.
-      </canvas>
-    </div>
+	<head>
+		<style>
+			html,body { position:relative; background-color:#222201; width:100%; height:100%; overflow:auto; margin:0; padding:0; }
+			#container { position:relative; background-color:#222201; display:table; width:100%; height:100%; overflow:auto;}
+			#outer { position:relative; display:table-cell; vertical-align:middle; text-align:center; }
+			#inner { position:relative; width:800px; height:480px; margin-left:auto; margin-right:auto; }
+			#nacl_div { position:absolute; top:0; left:0; }
+			#menu { position:absolute; bottom:0px; height:50px; width:800px; left:0; }
+			#logo { position:absolute; top:-13px; left:0; } 
+			#console { position:absolute; display:table-cell; font-family:sans-serif, helvetica, arial; color:white; font-size:10px; text-align:center; top:10px; border:1px #999999 solid; left:230px;  }
+			#console p { position:relative; top:3px; margin:0;padding:0; }
+			#console_loader { position:absolute; background-color:#ffffff; opacity:0.15; top:10px; left:231px; height:22px; }
+			#links { position: absolute; top:10px; right:5px; width: 250px; height:20px;  }
+			#links .fs { position:absolute; right:0; margin:0; padding:0; cursor:pointer;}
+			#links .source { position:absolute; top:3px; right:35px; margin:0; padding:0; }
+			#links .native { position:absolute; top:3px; right:110px; margin:0; padding:0; }
+			#links .url { position:absolute; top:3px; right:190px; margin:0; padding:0; }
+		</style>
+	    <script type="text/javascript" src="check_browser.js"></script>
+	</head>	
+	<body>
+		<div id="container">
+			<div id="outer">
+				<div id="inner">
+					<div id="nacl_div" style="-webkit-box-shadow: 0px 0px 160px #6c6c6c;"></div>
+					<div id="menu">	
+						<a href="http://www.wesnoth.org" target="_blank"><img id="logo" src="wesnoth_logo.png"/></a>
+						<div id="console_loader"></div>
+						<div id="console"><p>Trying To Initialize</p></div>
+						<div id="links">
+							<a href="http://www.wesnoth.org" target="_blank"><img class="url" src="wesnoth_url.png"/></a>
+							<a href="http://code.google.com/chrome/nativeclient" target="_blank"><img class="native" src="wesnoth_native.png"/></a>
+							<a href="https://github.com/eugenis/wesnoth-nacl-build" target="_blank"><img class="source" src="wesnoth_source.png"/></a>
+							<img id="toggle" class="fs" src="wesnoth_fs.png"/>
+						</div>
+					</div>
+				</div>
+			</div>
+		</div>
 
-    <script src="peppermount_helper.js"></script>
-    <script src="wesnoth.js"></script>
+    <script src="fs.js"></script>
+		<script src="peppermount_helper.js"></script>
+		<script src="wesnoth.js"></script>
 
-    <p style="text-align:center">
-    <a href="http://www.wesnoth.org">Wesnoth</a> |
-    <a href="http://code.google.com/chrome/nativeclient">NativeClient</a>
-  </body>
-</HTML>
+	</body>
+</html>
diff --git a/utils/nacl/static/wesnoth.js b/utils/nacl/static/wesnoth.js
index bf26385..af4dcd4 100644
--- a/utils/nacl/static/wesnoth.js
+++ b/utils/nacl/static/wesnoth.js
@@ -1,28 +1,78 @@
-/*
- * Copyright (c) 2011 The Native Client Authors. All rights reserved.
- * Use of this source code is governed by a BSD-style license that can be
- * found in the NaCl-LICENSE file.
- */
+var gameWidth=1024, gameHeight=800;
+var consoleWidth=0;
 
+/*** detect screen size and load nacl module ***/
+function resizeNaclModule() {
+	var winWidth=document.width, winHeight=document.height;
+	var menuHeight=50;
+
+	/*** Resizes and element based on ID ***/	
+	function resizeElement (id, width, height) {
+		document.getElementById(id).style.width = width + "px";
+		document.getElementById(id).style.height = height + "px";
+		}
+
+	/*** Resizes all game elements and containers based on game window dimensions ***/
+	function resizeAll (width, height) {
+
+		/* RESIZE CONTAINERS */
+		resizeElement("inner", width, height+menuHeight);
+		resizeElement("nacl_div", width, height);
+
+		gameWidth=width;
+		gameHeight=height;
+		resizeElement("menu", width, menuHeight);
+
+		/* RESIZE CONSOLE */
+		consoleWidth=width-520;
+		resizeElement("console", consoleWidth, 20);
+		}
+
+	/*** Resize elements based on window size ***/
+	/* TEMPORARILY DISABLED 
+	if (winHeight > (768+menuHeight)) { 
+		resizeAll(1024,768);
+		}
+	else if ((winHeight > (600+menuHeight)) && (winHeight < (768+menuHeight))) { 
+		resizeAll(1024,600); 
+		}
+	else if ((winHeight > (480+menuHeight)) && (winHeight < (600+menuHeight))) { 
+		resizeAll(800,480);
+		}
+	else if (winHeight < (480+menuHeight)) { 
+		resizeAll(800,480);
+		}
+	*/
+	resizeAll(1024,800);
+		
+	/*** Initialize fullscreen toggle ***/
+	var container = document.getElementById('container');
+	var toggleButton = document.getElementById('toggle');
+	
+	toggleButton.onclick = function() {
+		if (screen.height === window.outerHeight) {
+			document.webkitCancelFullScreen();
+			}
+		else {
+			container.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
+			}
+		}
+
+	}
+
+
+/*** UPDATE PROGRESS BAR ***/
 function updateProgressBar(percent, message, styleBackground,
                            styleForeground, styleText) {
     console.log("message: " + message);
     console.log("progress: " + percent + "%");
-    var progress_bar =
-        document.getElementById('progress_bar');
-    var ctx = progress_bar.getContext('2d');
-    var width = progress_bar.width;
-    ctx.fillStyle = styleForeground ? styleForeground :
-        "#52565a";
-    ctx.fillRect(0, 0, percent * width, 20);
-    ctx.fillStyle = styleBackground ? styleBackground :
-        "#ddccbb";
-    ctx.fillRect(percent * width, 0, width, 20);
-    ctx.fillStyle = styleText ? styleText : "black";
-    ctx.textAlign = "center";
-    ctx.textBaseline = "middle";
-    ctx.font = 'sans-serif';
-    ctx.fillText(message, width / 2, 10, 3 * width / 4);
+
+	// update console message
+	document.getElementById('console').innerHTML = "<p>" + message + "</p>";
+
+	// update console loader bar
+	document.getElementById('console_loader').style.width = (consoleWidth * percent) + "px";
+
 }
 
 function HandleProgress(event) {
@@ -75,10 +125,12 @@ function requestQuotaAndStartWesnoth() {
                 var embed = document.createElement('embed');
                 embed.setAttribute('name', 'nacl_module');
                 embed.setAttribute('id', 'wesnoth');
-                embed.setAttribute('width', 1024);
-                embed.setAttribute('height', 800);
+                embed.setAttribute('width', gameWidth);
+                embed.setAttribute('height', gameHeight);
                 embed.setAttribute('src', 'wesnoth.nmf');
                 embed.setAttribute('type', 'application/x-nacl');
+                embed.setAttribute('http2_files', http2_files);
+                embed.setAttribute('http2_files2', http2_files2);
                 var div = document.getElementById("nacl_div");
                 div.appendChild(embed);
                 div.addEventListener('progress', HandleProgress, true);
@@ -138,6 +190,11 @@ function checkBrowser() {
     return isValidBrowser && browserSupportStatus == browser_version.BrowserChecker.StatusValues.NACL_ENABLED;
 }
 
-if (checkBrowser())
-    requestQuotaAndStartWesnoth();
+
+/*** resize window ***/
+resizeNaclModule();
+
+/*** Initialize NaCl module ***/
+if (checkBrowser()) requestQuotaAndStartWesnoth();
+
 
diff --git a/utils/nacl/static/wesnoth_fs.png b/utils/nacl/static/wesnoth_fs.png
new file mode 100644
index 0000000..5358277
Binary files /dev/null and b/utils/nacl/static/wesnoth_fs.png differ
diff --git a/utils/nacl/static/wesnoth_logo.png b/utils/nacl/static/wesnoth_logo.png
new file mode 100644
index 0000000..367eb3c
Binary files /dev/null and b/utils/nacl/static/wesnoth_logo.png differ
diff --git a/utils/nacl/static/wesnoth_native.png b/utils/nacl/static/wesnoth_native.png
new file mode 100644
index 0000000..7b98969
Binary files /dev/null and b/utils/nacl/static/wesnoth_native.png differ
diff --git a/utils/nacl/static/wesnoth_source.png b/utils/nacl/static/wesnoth_source.png
new file mode 100644
index 0000000..b1189cd
Binary files /dev/null and b/utils/nacl/static/wesnoth_source.png differ
diff --git a/utils/nacl/static/wesnoth_url.png b/utils/nacl/static/wesnoth_url.png
new file mode 100644
index 0000000..1b3bc83
Binary files /dev/null and b/utils/nacl/static/wesnoth_url.png differ
