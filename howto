Get the nacl-sdk. Setup NACL_SDK_ROOT and NACL_TOOLCHAIN_ROOT (to the glibc toolchain in pepper15/toolchain/linux_x86).

Build and install all naclports.
make NACL_GLIBC=1 NACL_PACKAGES_BITSIZE=64 make
At the moment ffmpeg fails compilation with glibc. Just delete if from the Makefile if that's the case.

Get wesnoth-1.9.5 from official site, apply the patch (wesnoth-1.9.5-nacl.patch), run build.sh.

There is an "install" commented out in the build.sh file because it is too slow to do on every incremental build.
Uncomment it and run ./build.sh once, then comment it out again.

Delete wqy-zenhei.ttc from the installation if you can live without it. It's >13M!

Then do some file indexing magic:
./buildpack.py $NACL_TOOLCHAIN_ROOT/x86_64-nacl/usr/local/share/wesnoth/ ppapi/packs_generated.cc
./genfs.sh
rm wesnoth ppapi/libwesnoth_ppapi.a ; ./build.sh && cp wesnoth $NACL_TOOLCHAIN_ROOT/x86_64-nacl/usr/local/bin/wesnoth

# Go to the toolchain dir and run the web server
python -m SimpleHTTPServer 8000

Run chrome and navigate to wesnoth.html.


----------------

It kind of works.

* Saving works to the in-memory file system!
* An extra software cursor is displayed. Can be disabled in Preferences (display > show color cursors).

----------------


== THE FOLLOWING MAY BE OUTDATED ==

This is how you run Wesnoth with sel_universal (SDL-based PPAPI implementation). Does not work at the moment.

# In the NaCl tree, build the loader
./scons platform=x86-64 --mode=dbg-linux sel_universal sel_ldr ncval_stubout sdl_sel_universal=1

# Run wesnoth
scons-out/dbg-linux-x86-64/staging/sel_universal -a -c  -- wesnoth-debug-stubout -d < src/trusted/sniversal/launch.stdin

